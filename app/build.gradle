apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'org.greenrobot.greendao' // apply plugin
//apply plugin: 'channel'

android {

    signingConfigs {
        newTask_signing {
            storeFile file(releaseStoreFile)
            storePassword releaseStorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }

        debug {
            storeFile file(releaseStoreFile)
            storePassword releaseStorePassword
//            keyAlias releaseKeyAlias
            keyAlias '曹维健'
            keyPassword releaseKeyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.example.caowj.newtask"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (isModule.toBoolean()){
            buildConfigField("boolean", "isARouter", "true")
        }else {
            buildConfigField("boolean", "isARouter", "false")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.newTask_signing
            manifestPlaceholders = [app_name: "@string/app_name"]
//            resValue("string", "app_name", "GradleTestDebug")
//            buildConfigField("boolean", "LOG_DEBUG", "false")
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.newTask_signing
            signingConfig signingConfigs.debug
            versionNameSuffix "_debug"
            applicationIdSuffix ".debug"
            manifestPlaceholders = [app_name: "@string/app_name_test"]
//            resValue("string", "app_name", "GradleTestDebug")
//            buildConfigField("boolean", "LOG_DEBUG", "true")
            ext.enableCrashlytics = false // 不需要运行 Crashlytics
            ext.alwaysUpdateBuildId = false //在每个构建期间阻止 Crashlytics 使用它自己的独特构建 ID 更新应用资源。

        }
    }

//    schemaVersion：当前版本的数据库模式。这被OpenHelpers类用于在模式版本之间迁移。如果更改了实体/数据库模式，则必须增加该值。默认为1。
//    daoPackage：生成的Dao，DaoMaster和DaoSession的包名称。 默认为源实体的包名称。
//    targetGenDir：生成源应存储在的位置。 默认为构建目录（ build / generated / source / greendao）中生成的源文件夹。
//    generateTests： 设置为true以自动生成单元测试。
//    targetGenDirTests： 应存储生成的单元测试的基本目录。默认为 src / androidTest / java。
//    greendao {
//        schemaVersion 3
//        targetGenDir 'src/main/java'
//    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    dataBinding {
        enabled = true
    }

//    applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
//                outputFileName "NewTask${variant.buildType.name}_" + buildTime() + "_ver${variant.versionName}.apk"
//            }
//        }
//    }

}

//static def buildTime() {
//    return new Date().format("MM-dd")
//}

//不需要加固的情况下使用：
//channel{
//    //指定渠道文件
//    channelFile = file("../channel.txt")
//    //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
//    baseOutputDir = new File(project.buildDir,"channel")
//    //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}
//    apkNameFormat ='${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'
//    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上）
//    isFastMode = false
//}

//需要加固的情况下使用：
//rebuildChannel {
//    //指定渠道文件
//    channelFile = file("../channel.txt")
////    baseDebugApk = new File(project.projectDir, "baseApk/app-base-debug.apk")
//    //注意目录和文件名称（名称中必须包含base）
//    baseReleaseApk = new File(project.projectDir, "baseApk/app-base-release.apk")
//    //默认为new File(project.buildDir, "rebuildChannel/debug")
//    debugOutputDir = new File(project.buildDir, "rebuildChannel/debug")
//    //默认为new File(project.buildDir, "rebuildChannel/release")
//    releaseOutputDir = new File(project.buildDir, "rebuildChannel/release")
//    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上）
//    isFastMode = false
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':module_common')
    if (!isModule.toBoolean()) {
        implementation project(':module_main')
        implementation project(':module_learn')
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${rootProject.kotlin_version}"
}
repositories {
    mavenCentral()
}
